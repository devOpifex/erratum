% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny.R
\name{e.observe}
\alias{e.observe}
\title{Observe with Error Handling}
\usage{
e.observe(
  x,
  e = NULL,
  w = NULL,
  env = parent.frame(),
  ...,
  label = NULL,
  suspended = FALSE,
  priority = 0,
  domain = shiny::getDefaultReactiveDomain(),
  autoDestroy = TRUE,
  ..stacktraceon = TRUE
)
}
\arguments{
\item{x}{An expression (quoted or unquoted). Any return value will be
ignored.}

\item{e}{Error handler.}

\item{w}{Warning handler.}

\item{env}{The parent environment for the reactive expression. By default,
this is the calling environment, the same as when defining an ordinary
non-reactive expression. If \code{x} is a quosure and \code{quoted} is \code{TRUE},
then \code{env} is ignored.}

\item{...}{Not used.}

\item{label}{A label for the observer, useful for debugging.}

\item{suspended}{If \code{TRUE}, start the observer in a suspended state. If
\code{FALSE} (the default), start in a non-suspended state.}

\item{priority}{An integer or numeric that controls the priority with which
this observer should be executed. A higher value means higher priority: an
observer with a higher priority value will execute before all observers
with lower priority values. Positive, negative, and zero values are
allowed.}

\item{domain}{See \link[shiny]{domains}.}

\item{autoDestroy}{If \code{TRUE} (the default), the observer will be
automatically destroyed when its domain (if any) ends.}

\item{..stacktraceon}{Advanced use only. For stack manipulation purposes; see
\code{\link[shiny:stacktrace]{stacktrace()}}.}
}
\description{
Observe with erratum error handling.
}
